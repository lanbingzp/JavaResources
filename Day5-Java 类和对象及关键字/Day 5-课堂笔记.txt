目标
    了解 Java 中的继承的概念
    了解继承的好处以及如何实现
    了解 Java 多态概念以及实现方式
    了解 Java 中接口的定义以及实现方式 	
	
1、复习
   对象由状态和行为组成 
   类是具有相同属性和行为的一组对象的集合 
   封装是隐藏对象实现细节的过程，以便不让用户看到
   类的变量和方法可被该类的实例访问
   圆点符号用于访问对象的成员
   构造函数在创建对象时初始化对象
   
2、了解 Java 中的继承的概念
    动物种类图好处：
	(1)让人能够清晰的了解动物的分类情况
	(2)方便人们给动物买食物
	
	继承：模拟现实世界中事物之间的一种关系。
	特点：
	(1)具有清晰的金字塔结构
	(2)子类继承了父类的属性和方法
	
3、了解继承的好处以及如何实现
	优点：
	(1)可以增加代码的重用
	(2)父类中的属性和方法，可以在子类中直接调用，在子类中也可以对父类中的
	   属性或方法进行扩展
	(3)可以对同一个父类，轻松扩展子类
	(4)让我们对一个项目中多个类之间的关系更清晰，设计更合理
	
	继承的实现：
	(1)定义一个普通类作为父类，
	(2)定义一个普通类，在 class 子类名  extends 父类名{}

4、了解 Java 多态概念以及实现方式
    多态：同一事物的多种表现形式。
	在程序中的应用：
	    用父类类型，定义子类对象，由于一种父类可以有多个子类，所以说
		同一类型(父类类型)的事物，可以有多种具体的形态(子类形态)
    例如：
		花 h1 = new 玫瑰花();
		花 h2 = new 康乃馨();
	
	instanceof 把一个对象与某种类型进行比较，如果该对象是
	//比较的类型那么返回 true
	if(temp instanceof Rect){
		System.out.print("长方形");
	}
	

	
	多态的实现方式：
	(1)子类继承父类
	(2)子类中定义与父类中一样的方法(方法名、参数列表、返回值类型、访问修饰符)，
	   但是方法的实现代码不一样，子类对父类中的方法， 可以进行扩展。
	   这叫子类“重写(Overwrite)”父类中的方法。
	(3)在同一个类中，定义多个方法名相同，但是参数列表或返回值类型不同的方法，
       目的增强该类中这个方法的功能。这叫方法的“重载(Overload)”。

       System.out.println()  中的 println() 方法，被重载过很多次，我们可以使用
	   该方法输出各种类型的值
	   
	
	
	

5、了解 Java 中接口的定义以及实现方式 	
   接口：指制定统一的规则，但是不管实现细节，具体的细节，由实现这些接口人去实现。
         接口应该是公认的标准
		 
	在我们的程序中有些地方也需要定义接口，通过继承由子类来实现具体的细节。

    如：形状类，计算周长和面积。

    接口如何实现：
    (1)接口是 Java 中的一个特殊类，需要单独写在一个  Java 文件中
    (2)接口不用  class 关键字来定义，而是用 interface 关键字定义
	(3)接口中所有的方法，都不需要定义方法体。这样的方法叫做抽象方法
	
	
    (4)子类实现一个接口，就必须“重写”接口中所有的方法
	(5)Java 中，一个类只能继承一个父类，但是可以“实现”多个接口，实现接口
	   用  implements  关键字，
	
	
	











	
   
   
   
   
   
   
   
   
   
   
   
   
	