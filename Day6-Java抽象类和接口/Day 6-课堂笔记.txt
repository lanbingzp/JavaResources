目标
    复习类、对象、继承的概念
    巩固 java 多态编程
    理解 java 面向接口编程
    掌握 java 抽象方法、抽象类
      	

1、复习类、对象、继承的概念
类：类是具有相同属性和行为的对象的集合。－－－对象的模版
 组成：
  class 类名{
	private 属性变量 ;
       
        //给属性初始化赋值
        构造函数(){}     

        getter/setter 方法       

        返回值类型  方法(){}
  }
  别名：javaBean 

对象:
   创建方法一：手动创建
    类名   引用变量名  = new 类构造函数(自定义的初始值);

   创建方法二：自动创建
    class 类名{
       public static void method(){}
       public void method2(){}
    }

    类名.method();
    类名.method2();  //不能调用

    对象的使用：
     对象名.方法名();
     对象名.构造方法名(); //不允许

继承：
   目的：代码重用
   实现方式：
   class  SuperClass{
       private int sup;       

       public SuperClass(){}
       public SuperClass(int aa){}
       
       public void supMethod();
   }

   class  SubClass extends SuperClass{
       public String a;
       public int b;         

       public SubClass(){
           super();  //首行调用父类构造
           a = "aa";
           this.b = 22;  //this 在类内部使用，代表当前类的对象
       }

       public void subMethod(){
          //super 代表父类的对象
          //调用父类中的方法
          super.supMethod();
          //不能调用父类中私有的属性
          super.sup;
      } 
   }


掌握 Java 类中出现的关键字
static
this
super
extends
interface
implements

2、巩固 java 多态编程
Java 的多态：
instanceof 运行时判断对象类型的运算符号
(1)一定在父子类之间才会有多态的概念;程序在运行时动态判断；
(2)出发点：人 p = new 男人() 父类类型引用子类对象
(3)多态一般都是由 JVM 在运行时自动判断类型
(4)“运行时”类型判断完毕，再考虑如何调用对象中的方法
  重写:父子类之间的关系，子类把父类中的方法定义，重新实现一遍。
      说明子类重写了父类中的这一个方法
      如果子类重写父类中的方法，多态调用的时候，自动调用子类中
      重写过的方法 ， 父类中的方法  被覆盖  --> 失效
      父类中没有定义过的方法，无法被调用到，圈定了父中的方法

    好处：1、子类中可以对父类中方法的功能进行增强
         2、运行时，自动判断改调用
 
  重载：一个类中，如果有多个方法，方法名，返回值类型，修饰符都一样
但是输入参数列表不一样，这样做法叫重载。 
      System.out.println(x); //典型的方法重载
    好处：1、增强一个方法的功能
         2、方便使用改方法的人
         3、代码写好后，直到运行的一刻，才根据参数类型判断具体调用哪个方法


3、理解 java 面向接口编程
面向对象编程：先确定一个对象，分析对象的属性、方法，建立类。通过类创建无数个新的对象
           编程思想(方向问题)
面向接口编程：编程思路(细节问题)，使用 OOP 中：类、继承、多态、接口的概念

实际应用的场景：
    我想在家里装一个空调，需要准备下列事情：
    (1)打空调洞
    (2)确定空调挂的位置
    (3)买空调
    (4)装空调

   OOP分析：
    class 装空调{
      //属性
      public String 空调品牌;
      public double 空调功率
      public int 管道长度;
      public int 直径;
       
      public void 打洞(){}

      public void 定位(){}

      public void 买空调(){}

      public void 装空调(){}
   
    }





4、掌握 java 抽象方法、抽象类
public interface 安装空调{

   public abstract void 确定孔径();

	
}


abstract:抽象，是一个修饰符。
   抽取主要、忽略次要。

如何定义：
   可以用来修饰方法：
       这个方法就只需要定义，不需要实现{}
               
   可以用来修饰类：
      如果一个类中，有抽象方法，这个类肯定是抽象类
      如果一个类是抽象类，这个类中，不一定要有抽象方法

如何使用：
   抽象类，不能实例化对象，不能  new 构造函数()
   抽象类中，可以写多个构造函数，但是不能使用
   抽象类，主要被作为父类使用，部分方法可以让子类直接使用，部分方法需要让子类实现
   
构造函数：
   抽象类的属性，通过子类构造函数，间接赋值    




小结：
1、面向接口编程
2、多态巩固
3、了解抽象类
	
   
   
   
   
   
   
   
   
   
   
   
   
	